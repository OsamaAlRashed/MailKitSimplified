name: 🏗 Build Test Pack
run-name: Build and test ${{ inputs.project-file }} in ${{ inputs.environment }}

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        description: 'The build environment'
        default: development
        type: string
      project-name:
        description: 'The name of the project'
        required: true
        type: string
      version:
        description: 'Package version suffix'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      PROJECT_FILE: 'source/${{ inputs.project-name }}/${{ inputs.project-name }}.csproj'
      TEST_PROJECT: 'tests/${{ inputs.project-name }}.Tests/${{ inputs.project-name }}.Tests.csproj'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
          dotnet-quality: 'ga'

      - name: Restore dependencies
        run: dotnet restore $PROJECT_FILE

      - name: Build
        run: dotnet build $PROJECT_FILE --configuration Release --no-restore

      # The xUnit test project template already integrates with coverlet.collector by default
      # Don't use the "--logger trx" option as it causes duplicate folders and xml files to be created
      - name: Test
        if: ${{ inputs.project-name != 'MailKitSimplified.Core' }}
        run: dotnet test $TEST_PROJECT -c Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory "./.coverage"

      - name: Merge all test project Code Coverage results into one report
        if: ${{ inputs.project-name != 'MailKitSimplified.Core' }}
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:".coverage/**/coverage.cobertura.xml" -targetdir:".coverage/report" -reporttypes:'Cobertura;HtmlSummary'

      - name: Upload code coverage summary report artifact
        if: ${{ inputs.project-name != 'MailKitSimplified.Core' }}
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: ".coverage/report/summary.html"
          retention-days: 1

      # Based on https://github.com/irongut/CodeCoverageSummary#net-workflow-example
      - name: Code Coverage Summary
        if: ${{ inputs.project-name != 'MailKitSimplified.Core' }}
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ".coverage/report/Cobertura.xml"
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        if: ${{ inputs.project-name != 'MailKitSimplified.Core' && github.event_name != 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2.2.0
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Markdown code coverage job summary
        if: ${{ inputs.project-name != 'MailKitSimplified.Core' }}
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: Pack
        run: dotnet pack $PROJECT_FILE -c Release --no-build -p:PackageVersion=${{ inputs.version }} --output ".nupkg"

      - name: Markdown workflow job summary
        run: echo "### Packed ${{ env.Package_Name }}" >> $GITHUB_STEP_SUMMARY
        env:
          Package_Name: '${{ inputs.project-name }}.${{ inputs.version }}.nupkg'

      - name: Upload artifacts for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.project-name }}
          path: '.nupkg/${{ inputs.project-name }}.${{ inputs.version }}.nupkg'
